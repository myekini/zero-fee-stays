-- RLS policies for public property reads
-- Generated by secure auth flow improvements (2025-10-06)

BEGIN;

-- Enable RLS on relevant tables (no-op if already enabled)
ALTER TABLE IF EXISTS public.properties ENABLE ROW LEVEL SECURITY;
ALTER TABLE IF EXISTS public.property_images ENABLE ROW LEVEL SECURITY;
ALTER TABLE IF EXISTS public.profiles ENABLE ROW LEVEL SECURITY;

-- Allow anonymous read of active properties only
DO $$
BEGIN
  IF NOT EXISTS (
    SELECT 1 FROM pg_policies
    WHERE schemaname = 'public'
      AND tablename = 'properties'
      AND policyname = 'public_read_active_properties'
  ) THEN
    CREATE POLICY public_read_active_properties
    ON public.properties
    FOR SELECT
    USING (is_active = true);
  END IF;
END$$;

-- Allow anonymous read of images that belong to active properties
DO $$
BEGIN
  IF NOT EXISTS (
    SELECT 1 FROM pg_policies
    WHERE schemaname = 'public'
      AND tablename = 'property_images'
      AND policyname = 'public_read_images_for_active_properties'
  ) THEN
    CREATE POLICY public_read_images_for_active_properties
    ON public.property_images
    FOR SELECT
    USING (
      EXISTS (
        SELECT 1
        FROM public.properties p
        WHERE p.id = property_images.property_id
          AND p.is_active = true
      )
    );
  END IF;
END$$;

-- Allow anonymous read of host profile basic info when referenced by an active property
-- Note: RLS cannot restrict columns; ensure your app only selects required safe fields (first_name, last_name)
DO $$
BEGIN
  IF NOT EXISTS (
    SELECT 1 FROM pg_policies
    WHERE schemaname = 'public'
      AND tablename = 'profiles'
      AND policyname = 'public_read_profiles_for_active_properties'
  ) THEN
    CREATE POLICY public_read_profiles_for_active_properties
    ON public.profiles
    FOR SELECT
    USING (
      EXISTS (
        SELECT 1
        FROM public.properties p
        WHERE p.host_id = profiles.id
          AND p.is_active = true
      )
    );
  END IF;
END$$;

COMMIT;
